#!/bin/bash

# AWS Lambda Ïª®ÌÖåÏù¥ÎÑà Î∞∞Ìè¨ Ïä§ÌÅ¨Î¶ΩÌä∏

# Î≥ÄÏàò ÏÑ§Ï†ï
AWS_REGION="ap-northeast-2"  # ÏÑúÏö∏ Î¶¨Ï†Ñ
ECR_REPOSITORY_NAME="black-market-api"
LAMBDA_FUNCTION_NAME="black-market-api"
IMAGE_TAG="latest"

# AWS Í≥ÑÏ†ï ID Í∞ÄÏ†∏Ïò§Í∏∞
AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

# ECR Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨ URI
ECR_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}"

echo "üöÄ Starting deployment process..."

# 1. ECR Î°úÍ∑∏Ïù∏
echo "üìù Logging in to ECR..."
aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URI}

# 2. ECR Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨ ÏÉùÏÑ± (Ï°¥Ïû¨ÌïòÏßÄ ÏïäÎäî Í≤ΩÏö∞)
echo "üì¶ Creating ECR repository if it doesn't exist..."
aws ecr describe-repositories --repository-names ${ECR_REPOSITORY_NAME} --region ${AWS_REGION} 2>/dev/null || \
aws ecr create-repository --repository-name ${ECR_REPOSITORY_NAME} --region ${AWS_REGION}

# 3. Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
echo "üî® Building Docker image..."
docker build -t ${ECR_REPOSITORY_NAME}:${IMAGE_TAG} .

# 4. Ïù¥ÎØ∏ÏßÄ ÌÉúÍ∑∏ ÏßÄÏ†ï
echo "üè∑Ô∏è  Tagging image..."
docker tag ${ECR_REPOSITORY_NAME}:${IMAGE_TAG} ${ECR_URI}:${IMAGE_TAG}

# 5. ECRÏóê Ïù¥ÎØ∏ÏßÄ Ìë∏Ïãú
echo "üì§ Pushing image to ECR..."
docker push ${ECR_URI}:${IMAGE_TAG}

# 6. Lambda Ìï®Ïàò ÏóÖÎç∞Ïù¥Ìä∏ (Ï°¥Ïû¨ÌïòÎäî Í≤ΩÏö∞) ÎòêÎäî ÏÉùÏÑ±
echo "‚ö° Updating Lambda function..."
aws lambda update-function-code \
    --function-name ${LAMBDA_FUNCTION_NAME} \
    --image-uri ${ECR_URI}:${IMAGE_TAG} \
    --region ${AWS_REGION} 2>/dev/null || \
aws lambda create-function \
    --function-name ${LAMBDA_FUNCTION_NAME} \
    --package-type Image \
    --code ImageUri=${ECR_URI}:${IMAGE_TAG} \
    --role arn:aws:iam::${AWS_ACCOUNT_ID}:role/lambda-execution-role \
    --timeout 30 \
    --memory-size 512 \
    --region ${AWS_REGION}

echo "‚úÖ Deployment completed!"
echo "üåê Lambda function: ${LAMBDA_FUNCTION_NAME}"
echo "üì¶ ECR image: ${ECR_URI}:${IMAGE_TAG}"